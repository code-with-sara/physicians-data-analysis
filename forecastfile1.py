# -*- coding: utf-8 -*-
"""forecastfile1.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1rHMB9GOMyi0VfFWW8yYTmhj8egnqIWQ0
"""

import numpy as np
import pandas as pd

forecast_data = pd.read_excel('C:\\Users\\RC\\Downloads\\volume_projection_encoded.xlsx')

forecast_data

forecast_data['ds'] = pd.to_datetime(forecast_data['ds'])
forecast_data.set_index('ds',inplace=True)
forecast_data.drop(index=pd.Timestamp('2024-11-01 00:00:00'), inplace=True)

date_range = pd.date_range(start='2024-11-01', end='2025-06-01', freq='MS')
final_df = pd.DataFrame()
for group_name, filtered_df in forecast_data.groupby(['Facility', 'Billing Code']):
    filtered_df = filtered_df.set_index('ds')
    filtered_df['Forecast'] = filtered_df['Case Count']
    for next_month in date_range:
        initial_month = (next_month-pd.Timedelta(360, unit='day')).to_period(freq='M').to_timestamp()
        year_data = filtered_df.loc[initial_month:next_month]
        if len(year_data)>=12:
            mean_val = filtered_df['Forecast'].rolling(window=12, min_periods=1).mean().iloc[-1].round()

            filtered_df.loc[next_month, ['Facility']] = group_name[0]
            filtered_df.loc[next_month, [ 'Billing Code']] = group_name[1]
            filtered_df.loc[next_month, [ 'Forecast']] = mean_val
            filtered_df.loc[next_month, [ 'is_rolling_mean']] = 1

            # filtered_df.loc[next_month, ['Facility', 'Billing Code', 'Forecast', 'is_rolling_mean']] = [group_name[0], group_name[1], mean_val, 1]
        elif len(year_data)<12:
            mean_val = filtered_df['Forecast'].mean().round()
            filtered_df.loc[next_month, ['Facility']] = group_name[0]
            filtered_df.loc[next_month, [ 'Billing Code']] = group_name[1]
            filtered_df.loc[next_month, [ 'Forecast']] = mean_val
            filtered_df.loc[next_month, [ 'is_rolling_mean']] = 0
            # filtered_df.loc[next_month, ['Facility', 'Billing Code', 'Forecast', 'is_rolling_mean']] = [group_name[0], group_name[1], mean_val, 0]
    final_df = pd.concat([final_df, filtered_df])

final_df.loc[final_df.index<'2024-11-01', 'Forecast'] = np.nan

from datetime import datetime
import pandas as pd
import numpy as np

forecast_data.reset_index(inplace=True)
forecast_data['ds'] = pd.to_datetime(forecast_data['ds'])

last_date = forecast_data['ds'].iloc[-1]

month_start_dates = pd.date_range(
    start=last_date + pd.offsets.MonthBegin(1),
    end=datetime(2025, 6, 1),
    freq='MS'
)
grouped = forecast_data.groupby(['Facility', 'Billing Code'])

all_results = pd.DataFrame()

for (facility, billing_code), rows in grouped:
    filtered_df = rows.set_index('ds')['2023-11-01':]

    new_rows = pd.DataFrame({
        'ds': month_start_dates,
        'Facility': facility,
        'Billing Code': billing_code,
        'Case Count': np.NaN,
    })

    filtered_df_f = pd.concat([filtered_df.reset_index(), new_rows], ignore_index=True)
    filtered_df_f['Forecast'] = np.NaN
    filtered_df_f = filtered_df_f.set_index('ds')

    start_date = pd.to_datetime('2023-11-01')
    end_date = pd.to_datetime('2024-10-01')
    data = filtered_df_f.loc[start_date:end_date]

    for index, row in filtered_df_f.iterrows():
        if index >= pd.to_datetime('2024-11-01'):
            if len(data) == 12:
                rolling_mean = (
                    filtered_df_f.loc[:index, 'Case Count']
                    .rolling(window=12, min_periods=2)
                    .mean()
                )
                filtered_df_f.loc[index, 'Forecast'] = round(rolling_mean.iloc[-1]) if not np.isnan(rolling_mean.iloc[-1]) else np.NaN
                filtered_df_f.loc[index, 'is_rolling_mean'] = 1
            else:
                mean_value = data['Case Count'].mean()
                filtered_df_f.loc[index, 'Forecast'] = round(mean_value) if not np.isnan(mean_value) else np.NaN
                filtered_df_f.loc[index, 'is_rolling_mean'] = 0

    all_results = pd.concat([all_results, filtered_df_f])

all_results.reset_index(inplace=True)

all_results.head(50)

all_results.to_csv('all_results.csv')

forecast_data.head()

# filtered_df_f.loc['2024-11-01':'2025-06-01', 'Case Count'] = filtered_df_f.loc['2024-11-01':'2025-06-01', 'Forecast']
# filtered_df_f

# Create a DataFrame with 5 rows and 4 columns
data = {
    'Name': ['Alice', 'Bob', 'Sara', 'John', 'Lisa'],
    'Age': [25, 30, 22, 30, 25],
    'Salary': [50000, 60000, 45000, 80000, 55000],
    'City': ['New York', 'San Francisco', 'Chicago', 'Boston', 'Austin']
}

df_small = pd.DataFrame(data)

# Show the DataFrame
print(df_small)

dat = df_small.groupby(['Name', 'Salary'])


for (name, salary), row in dat:
    # print(name, salary)
    print(row)

(forecast_data.groupby(['Facility', 'Billing Code'])['Case Count'].sum())#.loc[(344, 1)]#,['Case Count']]